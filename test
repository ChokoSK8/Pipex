#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdio.h>
#include <string.h>
#include <sys/wait.h>

char	*get_file1(char *av)
{
	char	*buf;
	int	len_buf;
	int	fd;
	char	c;

	fd = open(av, O_RDONLY);
	while (read(fd, &c, 1) == 1)
		len_buf++;
	close(fd);
	if (!(buf = malloc(len_buf + 1)))
	{
		perror("Un malloc a echoue");
		return (0);
	}
	fd = open(av, O_RDONLY);
	if (read(fd, buf, len_buf) != len_buf)
	{
		perror("La lecture de file1 a echoue");
		return (0);
	}
	buf[len_buf] = 0;
	return (buf);
}
	
int	main(int ac, char **av)
{
	int	filedes[2];
	char	buf[100];
	pid_t	child_pid;
	char	*file1;
	char 	*newargv[] = {"/bin/wc", "file1"};
	char	*newenviron[] = { NULL };

	if (!(file1 = get_file1(av[1])))
		return (0);

	if (pipe(filedes) == -1)
	{
		perror("erreur ouverture pipe");
		return (0);
	}

	if ((child_pid = fork()) == -1)
	{
		perror("erreur avec fork");
		return (0);
	}

	if (child_pid == 0)
	{
		close(filedes[0]);
		write(filedes[1], file1, strlen(file1) + 1);
		int fw = open("sortie.txt", O_CREAT|S_IRWXU|O_RDWR);
		dup2(fw, 1);
		execve("/bin/wc", newargv, newenviron);
		close(fw);
	}
	else
	{
		close(filedes[1]);
		read(filedes[0], buf, sizeof(buf));
		printf("Read from filesdes[0] : %s\n", buf);
	}
	return (1);
}
